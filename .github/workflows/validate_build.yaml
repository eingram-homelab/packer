name: Packer Validation and Build

on:
  # push:
  #   branches: [ develop ]
  #   paths:
  #     - '**.pkr.hcl'
  # pull_request:
  #   branches: [ develop ]
  #   paths:
  #     - '**.pkr.hcl'
  workflow_dispatch:

jobs:
  validate_and_build:
    name: Validate and Build Packer Templates
    runs-on: arc-runners
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Packer
        uses: hashicorp/setup-packer@main
        with:
          version: "latest"

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v46.0.2
        with:
          files: |
            **/*.pkr.hcl

      - name: Check Format for changed files
        if: steps.changed-files.outputs.all_changed_files != ''
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            dir=$(dirname "$file")
            echo "Checking format for $dir"
            packer fmt -check "$dir"
          done
      
      - name: Run packer init
        env:
          VAULT_ADDR: ${{ vars.VAULT_ADDR}}
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            dir=$(dirname "$file")
            echo "Running packer init for $dir"
            packer init "$dir"
          done 

      - name: Run packer validate
        env:
          VAULT_ADDR: ${{ vars.VAULT_ADDR}}
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
        if: steps.changed-files.outputs.all_changed_files != ''
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            dir=$(dirname "$file")
            echo "Validating $dir"
            packer validate "$dir"
          done

      - name: Run packer build
        env:
          VAULT_ADDR: ${{ vars.VAULT_ADDR}}
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
        if: steps.changed-files.outputs.all_changed_files != ''
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            dir=$(dirname "$file")
            echo "Building $dir"
            packer build "$dir"
          done