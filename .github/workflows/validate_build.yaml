name: Packer Validation and Build

on:
  # push:
  #   branches: [ develop ]
  #   paths:
  #     - '**.pkr.hcl'
  # pull_request:
  #   branches: [ develop ]
  #   paths:
  #     - '**.pkr.hcl'
  workflow_dispatch:

jobs:
  validate_and_build:
    name: Validate and Build Packer Templates
    runs-on: arc-runners
    env:
      VAULT_ADDR: ${{ vars.VAULT_ADDR }}
      VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Packer
        uses: hashicorp/setup-packer@main
        with:
          version: "latest"

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v46.0.2
        with:
          files: |
            **/*.pkr.hcl

      - name: Check Format for changed files
        if: steps.changed-files.outputs.all_changed_files != ''
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            dir=$(dirname "$file")
            echo "Checking format for $dir"
            packer fmt -check "$dir"
          done

      - name: Run packer init
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            dir=$(dirname "$file")
            echo "Running packer init for $dir"
            packer init "$dir"
          done

      - name: Run packer validate
        if: steps.changed-files.outputs.all_changed_files != ''
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            dir=$(dirname "$file")
            echo "Validating $dir"
            packer validate "$dir"
          done

      - name: Run packer build
        if: steps.changed-files.outputs.all_changed_files != ''
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            dir=$(dirname "$file")
            echo "Building $dir"
            packer build "$dir"
          done

      - name: Set vars from artifact info
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            dir=$(dirname "$file")
            echo "Setting vars for $dir"
            echo "TMPL_NAME=$(cat "$dir/build-manifest.json" | jq -r '.builds[0].artifact_id')" >> $GITHUB_OUTPUT
          done

  # trigger_terraform:
  #   needs: validate_and_build
  #   runs-on: arc-runners
  #   steps:
  #     - name: Trigger Terraform workflow to build VM from Templates
  #       run: |
  #         curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
  #         -H "Accept: application/vnd.github.v3+json" \
  #         https://api.github.com/repos/eingram-homelab/terraform/actions/workflows/vsphere-tmpl-verify.yaml/dispatches \
  #         -d '{
  #           "ref": "main",
  #           "inputs": {
  #             "template_name": "${{ needs.validate_and_build.outputs.TMPL_NAME }}"
  #           }
  #         }'
  call_terraform_vsphere-tmpl-verify:
    uses: eingram-homelab/terraform/.github/workflows/vsphere-tmpl-verify.yaml
    with:
      TMPL_NAME: ${{ needs.validate_and_build.outputs.TMPL_NAME }}