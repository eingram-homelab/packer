name: Packer Validation and Build

on:
  push:
    branches: [ main ]
    paths:
      - '**.pkr.hcl'
  # pull_request:
  #   branches: [ develop ]
  #   paths:
  #     - '**.pkr.hcl'
  # workflow_dispatch:

jobs:
  validate_and_build:
    outputs:
      TMPL_NAME: ${{ steps.set_TMPL_NAME.outputs.TMPL_NAME }}
    name: Validate and Build Packer Templates
    runs-on: arc-runners
    env:
      VAULT_ADDR: ${{ vars.VAULT_ADDR }}
      VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          repository: eingram-homelab/packer
          ref: main

      - name: Setup Packer
        uses: hashicorp/setup-packer@main
        with:
          version: "latest"

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v46.0.2
        with:
          files: |
            **/*.pkr.hcl

      - name: Check Format for changed files
        if: steps.changed-files.outputs.all_changed_files != ''
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            dir=$(dirname "$file")
            echo "Checking format for $dir"
            packer fmt -check "$dir"
          done

      - name: Run packer init
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            dir=$(dirname "$file")
            echo "Running packer init for $dir"
            packer init "$dir"
          done

      - name: Run packer validate
        if: steps.changed-files.outputs.all_changed_files != ''
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            dir=$(dirname "$file")
            echo "Validating $dir"
            packer validate "$dir"
          done

      - name: Run packer build
        if: steps.changed-files.outputs.all_changed_files != ''
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            dir=$(dirname "$file")
            echo "Building $dir"
            packer build "$dir"
          done

      - name: Set vars from artifact info
        id: set_TMPL_NAME
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            dir=$(dirname "$file")
            echo "Setting vars for $dir"
            echo "TMPL_NAME=$(cat "$dir/build-manifest.json" | jq -r '.builds[0].artifact_id')" >> $GITHUB_OUTPUT
          done

  call_terraform_vsphere-tmpl-verify:
    needs: validate_and_build
    uses: eingram-homelab/terraform/.github/workflows/vsphere-tmpl-verify.yaml@main
    with:
      TMPL_NAME: ${{ needs.validate_and_build.outputs.TMPL_NAME }}
    secrets:
      VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
      GCP_STORAGE: ${{ secrets.GCP_STORAGE }}

  publish_template:
    needs:
      - call_terraform_vsphere-tmpl-verify
      - validate_and_build
    runs-on: arc-runners
    env:
      VAULT_ADDR: ${{ vars.VAULT_ADDR }}
      VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          repository: eingram-homelab/packer
          ref: main

      - name: Set oldTemplateName var
        id: oldTemplateName
        run: |
          if [[ ${{ needs.validate_and_build.outputs.TMPL_NAME }} =~ (.*)__ ]]; then
            echo oldTemplateName="${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
          fi

      - name: Publish Template
        uses: PSModule/GitHub-Script@v1
        with:
          Script: |
            ./scripts/publish_template.ps1 `
              -newTemplateName ${{ needs.validate_and_build.outputs.TMPL_NAME }} `
              -oldTemplateName ${{ steps.oldTemplateName.outputs.oldTemplateName }}